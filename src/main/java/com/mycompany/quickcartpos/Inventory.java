/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quickcartpos;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.*;


/**
 *
 * @author HP
 */
public class Inventory extends javax.swing.JFrame {
private JTable inventoryTable;
 private DefaultTableModel tableModel;
    /**
     * Creates new form Inventory
     */
    public Inventory() {
        initComponents();
          initTable();
    }
    private void initTable() {
        // Define column names
        String[] columnNames = {"ID", "Name", "Barcode", "Quantity", "Price"};
        tableModel = new DefaultTableModel(null, columnNames);
        inventoryTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(inventoryTable);
        add(scrollPane);
    }
    
    private void addRowToTable(String id, String name, String barcode, String quantity, String price) {
        tableModel.addRow(new Object[]{id, name, barcode, quantity, price});
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AppNamePanel = new javax.swing.JPanel();
        QuickCartLabel = new javax.swing.JLabel();
        MenuPanel = new javax.swing.JPanel();
        AddItemButton = new javax.swing.JLabel();
        DeleteItemButton = new javax.swing.JLabel();
        EditItemButton = new javax.swing.JLabel();
        UpdateItemQButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AppNamePanel.setBackground(new java.awt.Color(174, 102, 183));

        QuickCartLabel.setFont(new java.awt.Font("Stencil", 0, 48)); // NOI18N
        QuickCartLabel.setForeground(new java.awt.Color(255, 255, 255));
        QuickCartLabel.setText("QuickCart");

        org.jdesktop.layout.GroupLayout AppNamePanelLayout = new org.jdesktop.layout.GroupLayout(AppNamePanel);
        AppNamePanel.setLayout(AppNamePanelLayout);
        AppNamePanelLayout.setHorizontalGroup(
            AppNamePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(AppNamePanelLayout.createSequentialGroup()
                .add(335, 335, 335)
                .add(QuickCartLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 281, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(499, Short.MAX_VALUE))
        );
        AppNamePanelLayout.setVerticalGroup(
            AppNamePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, AppNamePanelLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .add(QuickCartLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(45, 45, 45))
        );

        MenuPanel.setBackground(new java.awt.Color(213, 190, 216));

        AddItemButton.setBackground(new java.awt.Color(255, 255, 255));
        AddItemButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddItemButton.setText("Add Item");
        AddItemButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 20, 118)));
        AddItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddItemButtonMouseClicked(evt);
            }
        });

        DeleteItemButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DeleteItemButton.setText("Delete Item");
        DeleteItemButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 20, 118)));
        DeleteItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteItemButtonMouseClicked(evt);
            }
        });

        EditItemButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EditItemButton.setText("Edit Item");
        EditItemButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 20, 118)));

        UpdateItemQButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UpdateItemQButton.setText("Update Item Quantity");
        UpdateItemQButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 20, 118)));

        org.jdesktop.layout.GroupLayout MenuPanelLayout = new org.jdesktop.layout.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, MenuPanelLayout.createSequentialGroup()
                .addContainerGap(952, Short.MAX_VALUE)
                .add(MenuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(UpdateItemQButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(DeleteItemButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(EditItemButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(AddItemButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(43, 43, 43))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(MenuPanelLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .add(AddItemButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(DeleteItemButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(EditItemButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(UpdateItemQButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(141, 141, 141))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(MenuPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(AppNamePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(AppNamePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(MenuPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     

    private void AddItemButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddItemButtonMouseClicked

    // Create text fields for user input
    JTextField idField = new JTextField();
    JTextField nameField = new JTextField();
    JTextField barcodeField = new JTextField();
    JTextField quantityField = new JTextField();
    JTextField priceField = new JTextField();
    // Create a panel to hold the text fields
    JPanel inputPanel = new JPanel();
    inputPanel.setLayout(new GridLayout(5, 2));
    inputPanel.add(new JLabel("Id:"));
    inputPanel.add(idField);
    inputPanel.add(new JLabel("Name:"));
    inputPanel.add(nameField);
    inputPanel.add(new JLabel("Barcode:"));
    inputPanel.add(barcodeField);
    inputPanel.add(new JLabel("Quantity:"));
    inputPanel.add(quantityField);
    inputPanel.add(new JLabel("Price:"));
    inputPanel.add(priceField);

    int result = JOptionPane.showConfirmDialog(null, inputPanel, "Enter Item Information",
           JOptionPane.OK_CANCEL_OPTION);
    
    if (result == JOptionPane.OK_OPTION) {
        // Retrieve user input
        String id = idField.getText();
        String name = nameField.getText();
        String barcode = barcodeField.getText();
        String quantity = quantityField.getText();
        String price = priceField.getText();
        // Validate input (add your own validation logic as needed)
        if (id.isEmpty() || name.isEmpty() || barcode.isEmpty()|| quantity.isEmpty()|| price.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter valid information.", "Error", JOptionPane.ERROR_MESSAGE);
            return; 
        }

        // Add the entered data to the JTable
        String[] rowData = {id,name,barcode,quantity,price};
        tableModel.addRow(rowData);

        JOptionPane.showMessageDialog(null, "Item Added Successfully");
    }

    }//GEN-LAST:event_AddItemButtonMouseClicked

    private void DeleteItemButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteItemButtonMouseClicked
         String deletedRow = JOptionPane.showInputDialog("Enter id of item you want to Delete");
                if (inventoryTable.getSelectedRow() >= 0) {
                    for (int i = 0; i < tableModel.getRowCount(); i++) {
                        String id = tableModel.getValueAt(i, 0).toString();
                        if (id.equals(deletedRow)) {
                            tableModel.removeRow(i);
                            break;
                        }
                    }
                }
    }//GEN-LAST:event_DeleteItemButtonMouseClicked
    private void EditItemButtonMouseClicked(java.awt.event.MouseEvent evt) {                                              
        
    } 
    private void UpdateItemQButtonMouseClicked(java.awt.event.MouseEvent evt) {                                              
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddItemButton;
    private javax.swing.JPanel AppNamePanel;
    private javax.swing.JLabel DeleteItemButton;
    private javax.swing.JLabel EditItemButton;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JLabel QuickCartLabel;
    private javax.swing.JLabel UpdateItemQButton;
    // End of variables declaration//GEN-END:variables
}
